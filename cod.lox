// USAGE OF RESERVED NAMES
// AS IDENTIFIER
// IS USUAL CAUSE OF CANCER

// list of examples is here

// lox has dynamic variable definitions and assignments
/*
var a; // now just nil
a = "five"; // now it equals "five"
a = true; // now it equals true
a = 5; // now it equals 5

// lox still has built in debug print
dPrint "Hello World!";

// lox has functions
fun iAmFun(argument) {
    // and also return statements
    return 5;
}

// lox has built in functions
print(clock()); // prints seconds
// and exit(exit code); which will exit this program

// lox has loops
while(a > 0) {
    a = a - 1;
}
// some syntax sugar
for (;a < 5; a = a + 1) {}

// lox has conditional operator if
if (true) a = 1;
// all this time I was using block
else a = 0;

// and finally lox has expressions
a = (5 == 5) or ((5 == -5) and false); // true
a = (5 + 5 - 5) / 5 * 1; // 1

// I forgot about lox can CONCAT STRINGS!!
a = "Hi, " + "dear" + " reader";
print(a);
print();
/*
 * next you can see field 
 * full of dead functions bodies
 * but do not give them your attention 
 * it is OK
*/
/*
fun fib(n) { 
    if (n <= 1) 
    {
        return n;
    } 
    return (fib(n-1) + fib(n-2)); 
}

print(fib(40)); 
*/
// Bellissimo: Static Methods

class Static {
    static member() {
        print("I am static");
    }
}

class Mother {
    constructor() {
	this.fuck = true;
    }
    Hello() {
        print("Hello, I am mother");
    }
}

class Daughter < Mother {
    Hello() {
        print("Message from Daughter");
        print("fuck", super().fuck);
    }
}

const class GrandDaughter < Daughter {
    Hello() {
        super().Hello();
    }
}
GrandDaughter().Hello();